//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OneCoreData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class COMISIONESEntities : DbContext
    {
        public COMISIONESEntities()
            : base("name=COMISIONESEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<com_empresas> com_empresas { get; set; }
        public virtual DbSet<com_periodos> com_periodos { get; set; }
        public virtual DbSet<com_bitacora> com_bitacora { get; set; }
        public virtual DbSet<com_configPeriodos> com_configPeriodos { get; set; }
        public virtual DbSet<com_clientesHistoricoPeriodos> com_clientesHistoricoPeriodos { get; set; }
        public virtual DbSet<com_Descuentos> com_Descuentos { get; set; }
        public virtual DbSet<com_Conceptos> com_Conceptos { get; set; }
        public virtual DbSet<com_EmpresaConceptos> com_EmpresaConceptos { get; set; }
        public virtual DbSet<com_HistorialDescuentoVendedor> com_HistorialDescuentoVendedor { get; set; }
        public virtual DbSet<com_UsuarioVendedor> com_UsuarioVendedor { get; set; }
        public virtual DbSet<com_Documentos> com_Documentos { get; set; }
        public virtual DbSet<com_DocumentoVendedor> com_DocumentoVendedor { get; set; }
        public virtual DbSet<com_DescuentoConceptoVendedor> com_DescuentoConceptoVendedor { get; set; }
        public virtual DbSet<com_bancos> com_bancos { get; set; }
        public virtual DbSet<com_vendedores> com_vendedores { get; set; }
        public virtual DbSet<com_clientesComConfig> com_clientesComConfig { get; set; }
        public virtual DbSet<com_relConceptoVendedor> com_relConceptoVendedor { get; set; }
    
        public virtual ObjectResult<string> csp_ConsultarFacturas(Nullable<int> idEmpresa, string empresa, string idVendedor, Nullable<int> periodo, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string clientes)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var clientesParameter = clientes != null ?
                new ObjectParameter("Clientes", clientes) :
                new ObjectParameter("Clientes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("csp_ConsultarFacturas", idEmpresaParameter, empresaParameter, idVendedorParameter, periodoParameter, fechaInicioParameter, fechaFinParameter, clientesParameter);
        }
    
        public virtual ObjectResult<SP_COMISIONES_CONSULTAR_HISTORIAL_PERIODOS_Result> SP_COMISIONES_CONSULTAR_HISTORIAL_PERIODOS(string idVendedor, string periodo)
        {
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(string));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMISIONES_CONSULTAR_HISTORIAL_PERIODOS_Result>("SP_COMISIONES_CONSULTAR_HISTORIAL_PERIODOS", idVendedorParameter, periodoParameter);
        }
    
        public virtual ObjectResult<string> SP_COMISIONES_ACTUALIZAR_PERIODO(Nullable<int> idConfiguracionPeriodo, Nullable<int> status)
        {
            var idConfiguracionPeriodoParameter = idConfiguracionPeriodo.HasValue ?
                new ObjectParameter("idConfiguracionPeriodo", idConfiguracionPeriodo) :
                new ObjectParameter("idConfiguracionPeriodo", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_COMISIONES_ACTUALIZAR_PERIODO", idConfiguracionPeriodoParameter, statusParameter);
        }
    
        public virtual ObjectResult<string> SP_COMISIONES_RECALCULAR_PERIODO(string idVendedor, Nullable<int> periodo, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idConfiguracionPeriodo)
        {
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("fechaInicio", fechaInicio) :
                new ObjectParameter("fechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var idConfiguracionPeriodoParameter = idConfiguracionPeriodo.HasValue ?
                new ObjectParameter("idConfiguracionPeriodo", idConfiguracionPeriodo) :
                new ObjectParameter("idConfiguracionPeriodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_COMISIONES_RECALCULAR_PERIODO", idVendedorParameter, periodoParameter, fechaInicioParameter, fechaFinParameter, idConfiguracionPeriodoParameter);
        }
    
        public virtual ObjectResult<SP_COMISIONES_CONSULTAR_FACTURAS_COMISIONABLES_Result> SP_COMISIONES_CONSULTAR_FACTURAS_COMISIONABLES(string idVendedor, Nullable<int> periodo, Nullable<int> comisionar)
        {
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            var comisionarParameter = comisionar.HasValue ?
                new ObjectParameter("Comisionar", comisionar) :
                new ObjectParameter("Comisionar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMISIONES_CONSULTAR_FACTURAS_COMISIONABLES_Result>("SP_COMISIONES_CONSULTAR_FACTURAS_COMISIONABLES", idVendedorParameter, periodoParameter, comisionarParameter);
        }
    
        public virtual ObjectResult<SP_COMISIONES_CONSULTAR_FACTURAS_RETENIDAS_Result> SP_COMISIONES_CONSULTAR_FACTURAS_RETENIDAS(string idVendedor, Nullable<int> periodo)
        {
            var idVendedorParameter = idVendedor != null ?
                new ObjectParameter("idVendedor", idVendedor) :
                new ObjectParameter("idVendedor", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMISIONES_CONSULTAR_FACTURAS_RETENIDAS_Result>("SP_COMISIONES_CONSULTAR_FACTURAS_RETENIDAS", idVendedorParameter, periodoParameter);
        }
    
        public virtual ObjectResult<string> SP_COMISIONES_LIBERAR_COMISION(string facturas)
        {
            var facturasParameter = facturas != null ?
                new ObjectParameter("Facturas", facturas) :
                new ObjectParameter("Facturas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_COMISIONES_LIBERAR_COMISION", facturasParameter);
        }
    
        public virtual ObjectResult<string> SP_COMISIONES_LIBERAR_FACTURA_RETENIDA(string facturas, string nOTA)
        {
            var facturasParameter = facturas != null ?
                new ObjectParameter("Facturas", facturas) :
                new ObjectParameter("Facturas", typeof(string));
    
            var nOTAParameter = nOTA != null ?
                new ObjectParameter("NOTA", nOTA) :
                new ObjectParameter("NOTA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_COMISIONES_LIBERAR_FACTURA_RETENIDA", facturasParameter, nOTAParameter);
        }
    
        public virtual ObjectResult<csp_ConsultaStatusFacturas_Result> csp_ConsultaStatusFacturas(string facturas)
        {
            var facturasParameter = facturas != null ?
                new ObjectParameter("facturas", facturas) :
                new ObjectParameter("facturas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<csp_ConsultaStatusFacturas_Result>("csp_ConsultaStatusFacturas", facturasParameter);
        }
    
        public virtual ObjectResult<SP_COMISIONES_CONSULTAR_CONCEPTOS_Result> SP_COMISIONES_CONSULTAR_CONCEPTOS(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("idEmpresa", idEmpresa) :
                new ObjectParameter("idEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_COMISIONES_CONSULTAR_CONCEPTOS_Result>("SP_COMISIONES_CONSULTAR_CONCEPTOS", idEmpresaParameter);
        }
    }
}
